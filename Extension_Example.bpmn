<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_028lf4s" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="4.11.1" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.15.0">
  <bpmn:process id="Extension_Example" name="Extension_Example" isExecutable="true">
    <bpmn:extensionElements>
      <camunda:properties>
        <camunda:property name="emailId" value="manojkhandelwal029@gmail.com" />
      </camunda:properties>
      <camunda:executionListener event="end">
        <camunda:script scriptFormat="javascript">var elementId="Extension_Example";
var log = java.util.logging.Logger.getLogger(elementId);

var modelInstance = execution.getBpmnModelInstance();
var elementInstance = modelInstance.getModelElementById(elementId);
var extensionElements = elementInstance.getExtensionElements().getElementsQuery().filterByType(Java.type('org.camunda.bpm.model.bpmn.instance.camunda.CamundaProperties').class).singleResult().getCamundaProperties().toArray();

for each (var i in extensionElements) {
      var key = i.getCamundaName();
      var val = i.getCamundaValue();
      log.info(elementId+" Props :key: "+key);
	  log.info(elementId+" Props :val: "+val);
}</camunda:script>
      </camunda:executionListener>
    </bpmn:extensionElements>
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:extensionElements>
        <camunda:properties>
          <camunda:property name="firstName" value="Manoj" />
        </camunda:properties>
        <camunda:executionListener event="end">
          <camunda:script scriptFormat="javascript">var elementId="StartEvent_1";
var log = java.util.logging.Logger.getLogger(elementId);

var modelInstance = execution.getBpmnModelInstance();
var elementInstance = modelInstance.getModelElementById(elementId);
var extensionElements = elementInstance.getExtensionElements().getElementsQuery().filterByType(Java.type('org.camunda.bpm.model.bpmn.instance.camunda.CamundaProperties').class).singleResult().getCamundaProperties().toArray();

for each (var i in extensionElements) {
      var key = i.getCamundaName();
      var val = i.getCamundaValue();
      log.info(elementId+" Props :key: "+key);
	  log.info(elementId+" Props :val: "+val);
}</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:outgoing>Flow_141m9yy</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="Flow_141m9yy" sourceRef="StartEvent_1" targetRef="Script_Activity" />
    <bpmn:endEvent id="Event_0lu4syf">
      <bpmn:incoming>Flow_0wbc966</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_0wbc966" sourceRef="Script_Activity" targetRef="Event_0lu4syf" />
    <bpmn:scriptTask id="Script_Activity" name="Script_Activity" scriptFormat="javascript">
      <bpmn:extensionElements>
        <camunda:properties>
          <camunda:property name="lastName" value="Khandelwal" />
        </camunda:properties>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_141m9yy</bpmn:incoming>
      <bpmn:outgoing>Flow_0wbc966</bpmn:outgoing>
      <bpmn:script>var elementId="Script_Activity";
var log = java.util.logging.Logger.getLogger(elementId);

var modelInstance = execution.getBpmnModelInstance();
var elementInstance = modelInstance.getModelElementById(elementId);
var extensionElements = elementInstance.getExtensionElements().getElementsQuery().filterByType(Java.type('org.camunda.bpm.model.bpmn.instance.camunda.CamundaProperties').class).singleResult().getCamundaProperties().toArray();

for each (var i in extensionElements) {
      var key = i.getCamundaName();
      var val = i.getCamundaValue();
      log.info(elementId+" Props :key: "+key);
	  log.info(elementId+" Props :val: "+val);
}</bpmn:script>
    </bpmn:scriptTask>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Extension_Example">
      <bpmndi:BPMNEdge id="Flow_141m9yy_di" bpmnElement="Flow_141m9yy">
        <di:waypoint x="215" y="117" />
        <di:waypoint x="270" y="117" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0wbc966_di" bpmnElement="Flow_0wbc966">
        <di:waypoint x="370" y="117" />
        <di:waypoint x="432" y="117" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="179" y="99" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0lu4syf_di" bpmnElement="Event_0lu4syf">
        <dc:Bounds x="432" y="99" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_134tg6y_di" bpmnElement="Script_Activity">
        <dc:Bounds x="270" y="77" width="100" height="80" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
